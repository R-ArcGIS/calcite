% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/components-generated.R
\name{calcite_combobox}
\alias{calcite_combobox}
\title{Calcite Combobox}
\usage{
calcite_combobox(...)
}
\value{
an object of class \code{calcite_component} which is a subclass of \code{shiny.tag}
}
\description{
Create a \verb{<calcite-combobox>} component.
}
\section{Component Details}{


The below tables illustrate the properties, attributes, and optionally the
slots, events, and methods associated with this component.

Each attribute can be set through the corresponding argument in this function
or by passing it in via \code{...} as a named value e.g. \code{"icon-start" = "snow"}.

Each event is subscribed to by shiny. The component properties are updated
on each of the events.
\subsection{Properties}{\tabular{lllll}{
   Property \tab Attribute \tab Description \tab Type \tab Default \cr
   allowCustomValues \tab allow-custom-values \tab When true, allows entry of custom values, which are not in the original set of items. \tab boolean \tab undefined \cr
   clearDisabled \tab clear-disabled \tab When true, the value-clearing will be disabled. \tab boolean \tab false \cr
   disabled \tab disabled \tab When true, interaction is prevented and the component is displayed with lower opacity. \tab boolean \tab false \cr
   filterText \tab filter-text \tab Text for the component’s filter input field. \tab string \tab "" \cr
   filteredItems \tab – \tab Specifies the component’s filtered items. \tab HTMLCalciteComboboxItemElement[] \tab [] \cr
   flipPlacements \tab – \tab Specifies the component’s fallback slotted content placement when it’s initial placement has insufficient space available. \tab FlipPlacement[] \tab undefined \cr
   form \tab form \tab The id of the form that will be associated with the component. When not set, the component will be associated with its ancestor form element, if any. \tab string \tab undefined \cr
   label (required) \tab label \tab Accessible name for the component. \tab string \tab undefined \cr
   maxItems \tab max-items \tab Specifies the maximum number of calcite-combobox-items (including nested children) to display before displaying a scrollbar. \tab number \tab 0 \cr
   messageOverrides \tab message-overrides \tab Use this property to override individual strings used by the component. \tab ComboboxMessages \tab undefined \cr
   name \tab name \tab Specifies the name of the component. Required to pass the component’s value on form submission. \tab string \tab undefined \cr
   open \tab open \tab When true, displays and positions the component. \tab boolean \tab false \cr
   overlayPositioning \tab overlay-positioning \tab Determines the type of positioning to use for the overlaid content. Using "absolute" will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container’s layout. "fixed" should be used to escape an overflowing parent container, or when the reference element’s position CSS property is "fixed". \tab "absolute" | "fixed" \tab "absolute" \cr
   placeholder \tab placeholder \tab Specifies the placeholder text for the input. \tab string \tab undefined \cr
   placeholderIcon \tab placeholder-icon \tab Specifies the placeholder icon for the input. \tab string \tab undefined \cr
   placeholderIconFlipRtl \tab placeholder-icon-flip-rtl \tab When true, the icon will be flipped when the element direction is right-to-left ("rtl"). \tab boolean \tab false \cr
   readOnly \tab read-only \tab When true, the component’s value can be read, but controls are not accessible and the value cannot be modified. \tab boolean \tab false \cr
   required \tab required \tab When true, the component must have a value in order for the form to submit. \tab boolean \tab false \cr
   scale \tab scale \tab Specifies the size of the component. \tab "l" | "m" | "s" \tab "m" \cr
   selectedItems \tab – \tab Specifies the component’s selected items. \tab HTMLCalciteComboboxItemElement[] \tab [] \cr
   selectionDisplay \tab selection-display \tab When selectionMode is "ancestors" or "multiple", specifies the display of multiple calcite-combobox-item selections, where: "all" displays all selections with individual calcite-chips, "fit" displays individual calcite-chips that scale to the component’s size, including a non-closable calcite-chip, which provides the number of additional calcite-combobox-item selections not visually displayed, and "single" displays one calcite-chip with the total number of selections. \tab "all" | "fit" | "single" \tab "all" \cr
   selectionMode \tab selection-mode \tab Specifies the selection mode of the component, where: "multiple" allows any number of selections, "single" allows only one selection, "single-persist" allows one selection and prevents de-selection, and "ancestors" allows multiple selections, but shows ancestors of selected items as selected, with only deepest children shown in chips. \tab "ancestors" | "multiple" | "single" | "single-persist" \tab "multiple" \cr
   status \tab status \tab Specifies the status of the input field, which determines message and icons. \tab "idle" | "invalid" | "valid" \tab "idle" \cr
   validationIcon \tab validation-icon \tab Specifies the validation icon to display under the component. \tab boolean | string \tab undefined \cr
   validationMessage \tab validation-message \tab Specifies the validation message to display under the component. \tab string \tab undefined \cr
   validity \tab – \tab The current validation state of the component. \tab { valid: boolean; badInput: boolean; customError: boolean; patternMismatch: boolean; rangeOverflow: boolean; rangeUnderflow: boolean; stepMismatch: boolean; tooLong: boolean; tooShort: boolean; typeMismatch: boolean; valueMissing: boolean; } \tab {     valid: false,     badInput: false,     customError: false,     patternMismatch: false,     rangeOverflow: false,     rangeUnderflow: false,     stepMismatch: false,     tooLong: false,     tooShort: false,     typeMismatch: false,     valueMissing: false,   } \cr
   value \tab value \tab The component’s value(s) from the selected calcite-combobox-item(s). \tab string | string[] \tab null \cr
}

}

\subsection{Events}{\tabular{lll}{
   Event \tab Description \tab Type \cr
   calciteComboboxBeforeClose \tab Fires when the component is requested to be closed, and before the closing transition begins. \tab CustomEvent\if{html}{\out{<void>}} \cr
   calciteComboboxBeforeOpen \tab Fires when the component is added to the DOM but not rendered, and before the opening transition begins. \tab CustomEvent\if{html}{\out{<void>}} \cr
   calciteComboboxChange \tab Fires when the selected item(s) changes. \tab CustomEvent\if{html}{\out{<void>}} \cr
   calciteComboboxChipClose \tab Fires when a selected item in the component is closed via its calcite-chip. \tab CustomEvent\if{html}{\out{<void>}} \cr
   calciteComboboxClose \tab Fires when the component is closed and animation is complete. \tab CustomEvent\if{html}{\out{<void>}} \cr
   calciteComboboxFilterChange \tab Fires when text is added to filter the options list. \tab CustomEvent\if{html}{\out{<void>}} \cr
   calciteComboboxOpen \tab Fires when the component is open and animation is complete. \tab CustomEvent\if{html}{\out{<void>}} \cr
}

}

\subsection{Slots}{\tabular{ll}{
   Slot \tab Description \cr
   NA \tab A slot for adding calcite-combobox-items. \cr
}

}
}

\references{
\href{https://developers.arcgis.com/calcite-design-system/components/combobox/}{Official Documentation}
}
