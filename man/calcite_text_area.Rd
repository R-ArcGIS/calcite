% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/components-generated.R
\name{calcite_text_area}
\alias{calcite_text_area}
\title{Calcite Text Area}
\usage{
calcite_text_area(...)
}
\value{
an object of class \code{calcite_component} which is a subclass of \code{shiny.tag}
}
\description{
Create a \verb{<calcite-text-area>} component.
}
\section{Component Details}{


The below tables illustrate the properties, attributes, and optionally the
slots, events, and methods associated with this component.

Each attribute can be set through the corresponding argument in this function
or by passing it in via \code{...} as a named value e.g. \code{"icon-start" = "snow"}.

Each event is subscribed to by shiny. The component properties are updated
on each of the events.
\subsection{Properties}{\tabular{lllll}{
   Property \tab Attribute \tab Description \tab Type \tab Default \cr
   columns \tab columns \tab Specifies the component’s number of columns. \tab number \tab undefined \cr
   disabled \tab disabled \tab When true, interaction is prevented and the component is displayed with lower opacity. \tab boolean \tab false \cr
   form \tab form \tab The id of the form that will be associated with the component. When not set, the component will be associated with its ancestor form element, if any. \tab string \tab undefined \cr
   groupSeparator \tab group-separator \tab When true, number values are displayed with a group separator corresponding to the language and country format. \tab boolean \tab false \cr
   label \tab label \tab Accessible name for the component. \tab string \tab undefined \cr
   maxLength \tab max-length \tab Specifies the maximum number of characters allowed. \tab number \tab undefined \cr
   messageOverrides \tab message-overrides \tab Use this property to override individual strings used by the component. \tab TextAreaMessages \tab undefined \cr
   minLength \tab min-length \tab Specifies the minimum number of characters allowed. \tab number \tab undefined \cr
   name \tab name \tab Specifies the name of the component. \tab string \tab undefined \cr
   numberingSystem \tab numbering-system \tab Specifies the Unicode numeral system used by the component for localization. \tab "arab" | "arabext" | "latn" \tab undefined \cr
   placeholder \tab placeholder \tab Specifies the placeholder text for the component. \tab string \tab undefined \cr
   readOnly \tab read-only \tab When true, the component’s value can be read, but cannot be modified. \tab boolean \tab false \cr
   required \tab required \tab When true, the component must have a value in order for the form to submit. \tab boolean \tab false \cr
   resize \tab resize \tab Specifies if the component is resizable. \tab "both" | "horizontal" | "none" | "vertical" \tab "both" \cr
   rows \tab rows \tab Specifies the component’s number of rows. \tab number \tab undefined \cr
   scale \tab scale \tab Specifies the size of the component. \tab "l" | "m" | "s" \tab "m" \cr
   status \tab status \tab Specifies the status of the input field, which determines message and icons. \tab "idle" | "invalid" | "valid" \tab "idle" \cr
   validationIcon \tab validation-icon \tab Specifies the validation icon to display under the component. \tab boolean | string \tab undefined \cr
   validationMessage \tab validation-message \tab Specifies the validation message to display under the component. \tab string \tab undefined \cr
   validity \tab – \tab The current validation state of the component. \tab { valid: boolean; badInput: boolean; customError: boolean; patternMismatch: boolean; rangeOverflow: boolean; rangeUnderflow: boolean; stepMismatch: boolean; tooLong: boolean; tooShort: boolean; typeMismatch: boolean; valueMissing: boolean; } \tab {     valid: false,     badInput: false,     customError: false,     patternMismatch: false,     rangeOverflow: false,     rangeUnderflow: false,     stepMismatch: false,     tooLong: false,     tooShort: false,     typeMismatch: false,     valueMissing: false,   } \cr
   value \tab value \tab The component’s value. \tab string \tab "" \cr
   wrap \tab wrap \tab Specifies the wrapping mechanism for the text. \tab "hard" | "soft" \tab "soft" \cr
}

}

\subsection{Events}{\tabular{lll}{
   Event \tab Description \tab Type \cr
   calciteTextAreaChange \tab Fires each time a new value is typed and committed. \tab CustomEvent\if{html}{\out{<void>}} \cr
   calciteTextAreaInput \tab Fires each time a new value is typed. \tab CustomEvent\if{html}{\out{<void>}} \cr
}

}

\subsection{Slots}{\tabular{ll}{
   Slot \tab Description \cr
    \tab A slot for adding text. \cr
   "footer-end" \tab A slot for adding content to the end of the component’s footer. \cr
   "footer-start" \tab A slot for adding content to the start of the component’s footer. \cr
}

}
}

\references{
\href{https://developers.arcgis.com/calcite-design-system/components/text-area/}{Official Documentation}
}
